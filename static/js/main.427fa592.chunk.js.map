{"version":3,"sources":["App/App.module.scss","components/IconCard/IconCard.tsx","App/App.tsx","reportWebVitals.ts","index.tsx","components/IconCard/IconCard.module.scss"],"names":["module","exports","IconCard","icon","title","className","Icon","useMemo","props","dangerouslySetInnerHTML","__html","cn","styles","card","App","letterIcons","icons","bestDoctorIcon","rest","container","iconsList","Object","entries","map","subcontainer","data","iconHtml","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,aAAe,0BAA0B,MAAQ,mBAAmB,UAAY,yB,4LCaxHC,EAAoC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACzDC,EAAiBC,mBAAQ,WAC7B,MAAoB,kBAATJ,EACF,SAAcK,GACnB,OAAO,+CAASA,GAAT,IAAgBC,wBAAyB,CAAEC,OAAQP,OAGvDA,IACN,CAACA,IAEJ,OACE,sBAAKE,UAAWM,IAAGN,EAAWO,IAAOC,MAArC,UACE,cAACP,EAAD,CAAMD,UAAWO,IAAOT,OACxB,qBAAKE,UAAWO,IAAOR,MAAvB,SAA+BA,QCiBtBU,MAvCf,WAAgB,IACNC,EAAyCC,cAA5BC,EAA4BD,iBAATE,EAD3B,YACoCF,EADpC,kCAGb,OACE,uBAAMX,UAAWO,IAAOO,UAAxB,UACE,oBAAId,UAAWO,IAAOR,MAAtB,0BACA,oBAAIC,UAAWO,IAAOQ,UAAtB,SACGC,OAAOC,QAAQJ,GAAMK,KAAI,YAAoB,IAAD,mBAAjBnB,EAAiB,KAAVE,EAAU,KAC3C,OACE,6BACE,cAAC,EAAD,CAAUF,MAAOA,EAAOD,KAAMG,KADvBF,QAOf,oBAAIC,UAAWO,IAAOR,MAAtB,sBACA,sBAAKC,UAAWO,IAAOY,aAAvB,UACE,oBAAInB,UAAWO,IAAOR,MAAtB,oBACA,oBAAIC,UAAWO,IAAOQ,UAAtB,SACE,6BACE,cAAC,EAAD,CAAUhB,MAAM,iBAAiBD,KAAMc,EAAeQ,WAG1D,oBAAIpB,UAAWO,IAAOR,MAAtB,qBACA,oBAAIC,UAAWO,IAAOQ,UAAtB,SACGC,OAAOC,QAAQP,GAAaQ,KAAI,YAAwB,IAAD,mBAArBnB,EAAqB,KAAdsB,EAAc,KACtD,OACE,6BACE,cAAC,EAAD,CAAUtB,MAAOA,EAAOD,KAAMuB,KADvBtB,eCnBRuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA3B,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,2B","file":"static/js/main.427fa592.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__38atM\",\"subcontainer\":\"App_subcontainer__3_hkb\",\"title\":\"App_title__3QYND\",\"iconsList\":\"App_iconsList__3uBTf\"};","import React, { useMemo } from 'react'\nimport styles from './IconCard.module.scss'\nimport cn from 'classnames'\n\nexport interface IconCardProps {\n  className?: string\n  icon: React.ComponentType<React.SVGProps<SVGSVGElement>> | string\n  title: React.ReactNode\n}\n\ntype IconType =\n  | React.ComponentType<React.SVGProps<SVGSVGElement>>\n  | React.ComponentType<React.HtmlHTMLAttributes<HTMLDivElement>>\n\nexport const IconCard: React.FC<IconCardProps> = ({ icon, title, className }) => {\n  const Icon: IconType = useMemo(() => {\n    if (typeof icon === 'string') {\n      return function Icon(props: React.HtmlHTMLAttributes<HTMLDivElement>) {\n        return <div {...props} dangerouslySetInnerHTML={{ __html: icon }} />\n      }\n    }\n    return icon\n  }, [icon])\n\n  return (\n    <div className={cn(className, styles.card)}>\n      <Icon className={styles.icon} />\n      <div className={styles.title}>{title}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './App.module.scss'\nimport * as icons from '@bestdoctor/icons'\nimport { IconCard } from '../components/IconCard/IconCard'\n\nfunction App() {\n  const { letterIcons, bestDoctorIcon, ...rest } = icons\n\n  return (\n    <main className={styles.container}>\n      <h1 className={styles.title}>Common Icons</h1>\n      <ul className={styles.iconsList}>\n        {Object.entries(rest).map(([title, Icon]) => {\n          return (\n            <li key={title}>\n              <IconCard title={title} icon={Icon} />\n            </li>\n          )\n        })}\n      </ul>\n\n      <h1 className={styles.title}>Favicons</h1>\n      <div className={styles.subcontainer}>\n        <h2 className={styles.title}>Common</h2>\n        <ul className={styles.iconsList}>\n          <li>\n            <IconCard title=\"bestDoctorIcon\" icon={bestDoctorIcon.data} />\n          </li>\n        </ul>\n        <h2 className={styles.title}>Letters</h2>\n        <ul className={styles.iconsList}>\n          {Object.entries(letterIcons).map(([title, iconHtml]) => {\n            return (\n              <li key={title}>\n                <IconCard title={title} icon={iconHtml} />\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </main>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"IconCard_card__3hi50\",\"icon\":\"IconCard_icon__ZF1Bl\",\"title\":\"IconCard_title__3040a\"};"],"sourceRoot":""}